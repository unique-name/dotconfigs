U-boot commands for loading kernel and device tree
------------------------------------------------
fatload mmc 0:1 0x11000000 /imx6q-nitrogen6x.dtb
fatload mmc 0:1 0x10800000 /uImage-signed.bin
bootm 0x10800000 - 0x11000000

mmc rescan
ext2ls mmc 0 
ext2load mmc 0 0xb0000000 uImage.gz
ext2load mmc 0 0xb0600000 coh_rd_ext3.dtb
bootm 0xb0000000 - 0xb0600000

setenv ipaddr 192.168.6.94; setenv serverip 192.168.6.100; tftp 0x80000000 flash_jffs2.bin
sf update 0x80000000 0 0x10000000


dd command
-----------
dd if=/dev/urandom | pv | sudo dd of=/dev/sdb bs=1M


set /tmp to RAM
---------------
echo "tmpfs /tmp tmpfs rw,nosuid,nodev 0 0" | sudo tee -a /etc/fstab
sudo reboot

gstreamer:
----------
gst-launch mfw_v4lsrc ! mfw_v4lsink
gst-launch mfw_v4lsrc device=/dev/video0 ! ffenc_mpeg4 ! rtpmp4vpay send-config=true ! udpsink host=192.168.42.63 port=5000
gst-launch-1.0 videotestsrc pattern=1 ! mfw_v4lsink
gst-launch-1.0 v4l2src device=/dev/video1 ! videocrop top=200 left=70 right=10 bottom=100 ! autovideosink


Building Yocto
--------------
repo init -u git://git.freescale.com/imx/fsl-arm-yocto-bsp.git -b <branchname>
repo sync
vim yocto/build/conf/bblayers.conf #need to include all layers from sources
vim yocto/build/local.conf	#need to define default machine like MACHINE=imx6ulevk
source sources/poky/oe‐init‐build‐env
bitbake core-image-base
ll ./tmp/deploy/images/imx6ulevk			-	built images
ll ./build/tmp/work-shared/imx6ulevk/kernel-source	-	sources of Kernel

in local.conf :
IMAGE_INSTALL_append = " e2fsprogs openssh mtd-utils kernel-modules strace dhcp-client "


Disable auto-opening nautilus window after auto-mount
-------------------------------------------------------
gsettings set org.gnome.desktop.media-handling automount-open false


repo cleanup script
-------------------
repo forall -p -c 'git clean -fxd'
repo forall -p -c 'git reset --hard'
or this:
repo forall -vc "git reset --hard; git clean -df"


WORKING WITH SD PARTITIONS
--------------------------
sudo dd if=/dev/zero of=~/rootfs.img bs=1M count=400

sudo sfdisk ~/rootfs.img 1>/dev/null << END
,7M
;
END

device=`losetup -f` #option to obtain free loop device
sudo losetup -o 512 /dev/loop1 ~/intel-po/sdk/coh/binaries/sd.img
sudo losetup -o 8225280 /dev/loop2 ~/intel-po/sdk/coh/binaries/sd.img
yes | sudo mkfs.ext3 /dev/loop1
yes | sudo mkfs.ext4 /dev/loop2
sudo mount /dev/loop1 /home/serge/work/mnt-dir1
sudo mount /dev/loop2 /home/serge/work/mnt-dir2

sudo tar -xf /home/serge/work/rootfs.tar.gz -C /home/serge/work/mnt-dir
parted ~/intel-sdk/sdk/coh/binaries/sd.img print	#show disk info
fdisk -lu ~/intel-sdk/sdk/coh/binaries/sd.img		#show disk info
sudo losetup -d /dev/loop1
sudo losetup -d /dev/loop2
sudo umount /home/serge/work/mnt-dir*


JFFS2 Filesystem Support
------------------------
flash_eraseall -j /dev/mtd0
mount -t jffs2 /dev/mtdblock01 /mnt/nor


Execute command via ssh without entering password
--------------------------------------------------
sshpass -p "123" ssh -o "StrictHostKeyChecking no" -t serge@192.168.6.236 sudo reboot







